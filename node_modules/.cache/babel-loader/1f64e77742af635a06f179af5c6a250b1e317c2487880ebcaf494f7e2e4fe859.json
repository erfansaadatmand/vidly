{"ast":null,"code":"var _jsxFileName = \"/Users/erfan/Desktop/React Test/vidly/src/components/movies.jsx\";\nimport React, { Component } from \"react\";\nimport MoviesTable from \"./moviesTable\";\nimport Pagination from \"./common/pagination\";\nimport ListGroup from \"./common/listGroup\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport { paginate } from \"../utils/paginate\";\nimport { genres } from \"../services/fakeGenreService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Movies extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      movies: [],\n      genres: [],\n      currentPage: 1,\n      pageSize: 4,\n      selectedGenre: \"\"\n    };\n    this.handleDelete = movie => {\n      const movies = this.state.movies.filter(m => m._id !== movie._id);\n      this.setState({\n        movies\n      });\n    };\n    this.handleLike = movie => {\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(movie);\n      movies[index] = {\n        ...movies[index]\n      };\n      movies[index].liked = !movies[index].liked;\n      this.setState({\n        movies\n      });\n    };\n    this.handleDelete = id => {\n      const movies = this.state.movies.filter(m => m._id !== id);\n      this.setState({\n        ...this.state.pageSize,\n        movies\n      });\n    };\n    this.handleChangePage = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n    this.handleGenreSelected = genre => {\n      this.setState({\n        selectedGenre: genre,\n        currentPage: 1\n      });\n    };\n    this.handleSort = path => {\n      console.log(path);\n    };\n  }\n  componentDidMount() {\n    const genres = [{\n      _id: \"\",\n      name: \"All Genres\"\n    }, ...getGenres()];\n    this.setState({\n      movies: getMovies(),\n      genres\n    });\n  }\n  render() {\n    const {\n      length: count\n    } = this.state.movies;\n    const {\n      currentPage,\n      pageSize,\n      selectedGenre,\n      movies: allMovies\n    } = this.state;\n    if (count == 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There are no movies in the database.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 28\n    }, this);\n    console.log(selectedGenre);\n    const filtered = selectedGenre && selectedGenre._id ? allMovies.filter(m => m.genre._id === selectedGenre._id) : allMovies;\n    const movies = paginate(filtered, currentPage, pageSize);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          items: this.state.genres,\n          selectedItem: this.state.selectedGenre,\n          onItemSelect: this.handleGenreSelected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Showing \", filtered.length, \" movies in the database.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MoviesTable, {\n          movies: movies,\n          onLike: this.handleLike,\n          onDelete: this.handleDelete,\n          onSort: this.handleSort\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          itemsCount: filtered.length,\n          pageSize: pageSize,\n          currentPage: currentPage,\n          onPageChange: this.handleChangePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Movies;","map":{"version":3,"names":["React","Component","MoviesTable","Pagination","ListGroup","getMovies","getGenres","paginate","genres","jsxDEV","_jsxDEV","Movies","constructor","arguments","state","movies","currentPage","pageSize","selectedGenre","handleDelete","movie","filter","m","_id","setState","handleLike","index","indexOf","liked","id","handleChangePage","page","handleGenreSelected","genre","handleSort","path","console","log","componentDidMount","name","render","length","count","allMovies","children","fileName","_jsxFileName","lineNumber","columnNumber","filtered","className","items","selectedItem","onItemSelect","onLike","onDelete","onSort","itemsCount","onPageChange"],"sources":["/Users/erfan/Desktop/React Test/vidly/src/components/movies.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport MoviesTable from \"./moviesTable\";\nimport Pagination from \"./common/pagination\";\nimport ListGroup from \"./common/listGroup\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport { paginate } from \"../utils/paginate\";\nimport { genres } from \"../services/fakeGenreService\";\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    currentPage: 1,\n    pageSize: 4,\n    selectedGenre: \"\",\n  };\n  componentDidMount() {\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...getGenres()];\n    this.setState({ movies: getMovies(), genres });\n  }\n  handleDelete = (movie) => {\n    const movies = this.state.movies.filter((m) => m._id !== movie._id);\n    this.setState({ movies });\n  };\n  handleLike = (movie) => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n  handleDelete = (id) => {\n    const movies = this.state.movies.filter((m) => m._id !== id);\n    this.setState({ ...this.state.pageSize, movies });\n  };\n  handleChangePage = (page) => {\n    this.setState({ currentPage: page });\n  };\n  handleGenreSelected = (genre) => {\n    this.setState({ selectedGenre: genre, currentPage: 1 });\n  };\n  handleSort = (path) => {\n    console.log(path);\n  };\n  render() {\n    const { length: count } = this.state.movies;\n    const {\n      currentPage,\n      pageSize,\n      selectedGenre,\n      movies: allMovies,\n    } = this.state;\n\n    if (count == 0) return <p>There are no movies in the database.</p>;\n    console.log(selectedGenre);\n    const filtered =\n      selectedGenre && selectedGenre._id\n        ? allMovies.filter((m) => m.genre._id === selectedGenre._id)\n        : allMovies;\n    const movies = paginate(filtered, currentPage, pageSize);\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup\n            items={this.state.genres}\n            selectedItem={this.state.selectedGenre}\n            onItemSelect={this.handleGenreSelected}\n          />\n        </div>\n        <div className=\"col\">\n          <p>Showing {filtered.length} movies in the database.</p>\n          <MoviesTable\n            movies={movies}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={filtered.length}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handleChangePage}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}