{"ast":null,"code":"var _jsxFileName = \"/Users/erfan/Desktop/React Test/vidly/src/components/movies.jsx\";\nimport React, { Component } from \"react\";\nimport MoviesTable from \"./moviesTable\";\nimport Pagination from \"./common/pagination\";\nimport ListGroup from \"./common/listGroup\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport { paginate } from \"../utils/paginate\";\nimport _ from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport SearchBox from \"./common/searchBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Movies extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      movies: [],\n      genres: [],\n      currentPage: 1,\n      pageSize: 4,\n      searchQuery: \"\",\n      selectedGenre: null,\n      sortColumn: {\n        path: \"title\",\n        order: \"asc\"\n      }\n    };\n    this.handleDelete = movie => {\n      const movies = this.state.movies.filter(m => m._id !== movie._id);\n      this.setState({\n        movies\n      });\n    };\n    this.handleLike = movie => {\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(movie);\n      movies[index] = {\n        ...movies[index]\n      };\n      movies[index].liked = !movies[index].liked;\n      this.setState({\n        movies\n      });\n    };\n    // handleDelete = (id) => {\n    //   const movies = this.state.movies.filter((m) => m._id !== id);\n    //   this.setState({ ...this.state.pageSize, movies });\n    // };\n    this.handleChangePage = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n    this.handleGenreSelected = genre => {\n      this.setState({\n        selectedGenre: genre,\n        searchQuery: \"\",\n        currentPage: 1\n      });\n    };\n    this.handleSearch = query => {\n      this.setState({\n        searchQuery: query,\n        selectedGenre: null,\n        currentPage: 1\n      });\n    };\n    this.handleSort = sortColumn => {\n      this.setState({\n        sortColumn\n      });\n    };\n    this.getPagedData = () => {\n      const {\n        currentPage,\n        pageSize,\n        sortColumn,\n        selectedGenre,\n        searchQuery,\n        movies: allMovies\n      } = this.state;\n      let filtered = allMovies;\n      if (searchQuery) filtered = allMovies.filter(m => m.title.toLowerCase().startsWith(searchQuery.toLowerCase()));else if (selectedGenre && selectedGenre._id) filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\n      const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n      const movies = paginate(sorted, currentPage, pageSize);\n      return {\n        totalCount: filtered.length,\n        data: movies\n      };\n    };\n  }\n  componentDidMount() {\n    const genres = [{\n      _id: \"\",\n      name: \"All Genres\"\n    }, ...getGenres()];\n    this.setState({\n      movies: getMovies(),\n      genres\n    });\n  }\n  render() {\n    const {\n      length: count\n    } = this.state.movies;\n    const {\n      currentPage,\n      pageSize,\n      sortColumn,\n      searchQuery\n    } = this.state;\n    if (count == 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There are no movies in the database.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 28\n    }, this);\n    const {\n      totalCount,\n      data: movies\n    } = this.getPagedData();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-3\",\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          items: this.state.genres,\n          selectedItem: this.state.selectedGenre,\n          onItemSelect: this.handleGenreSelected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/movies/new\",\n          className: \"btn btn-primary\",\n          style: {\n            marginBottom: 20\n          },\n          children: \"New Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Showing \", totalCount, \" movies in the database.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n          value: searchQuery,\n          onChange: this.handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MoviesTable, {\n          movies: movies,\n          sortColumn: sortColumn,\n          onLike: this.handleLike,\n          onDelete: this.handleDelete,\n          onSort: this.handleSort\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          itemsCount: totalCount,\n          pageSize: pageSize,\n          currentPage: currentPage,\n          onPageChange: this.handleChangePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Movies;","map":{"version":3,"names":["React","Component","MoviesTable","Pagination","ListGroup","getMovies","getGenres","paginate","_","Link","SearchBox","jsxDEV","_jsxDEV","Movies","constructor","arguments","state","movies","genres","currentPage","pageSize","searchQuery","selectedGenre","sortColumn","path","order","handleDelete","movie","filter","m","_id","setState","handleLike","index","indexOf","liked","handleChangePage","page","handleGenreSelected","genre","handleSearch","query","handleSort","getPagedData","allMovies","filtered","title","toLowerCase","startsWith","sorted","orderBy","totalCount","length","data","componentDidMount","name","render","count","children","fileName","_jsxFileName","lineNumber","columnNumber","className","items","selectedItem","onItemSelect","to","style","marginBottom","value","onChange","onLike","onDelete","onSort","itemsCount","onPageChange"],"sources":["/Users/erfan/Desktop/React Test/vidly/src/components/movies.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport MoviesTable from \"./moviesTable\";\nimport Pagination from \"./common/pagination\";\nimport ListGroup from \"./common/listGroup\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport { paginate } from \"../utils/paginate\";\nimport _ from \"lodash\";\nimport { Link } from \"react-router-dom\";\nimport SearchBox from \"./common/searchBox\";\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    currentPage: 1,\n    pageSize: 4,\n    searchQuery: \"\",\n    selectedGenre: null,\n    sortColumn: { path: \"title\", order: \"asc\" },\n  };\n  componentDidMount() {\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...getGenres()];\n    this.setState({ movies: getMovies(), genres });\n  }\n  handleDelete = (movie) => {\n    const movies = this.state.movies.filter((m) => m._id !== movie._id);\n    this.setState({ movies });\n  };\n  handleLike = (movie) => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n  // handleDelete = (id) => {\n  //   const movies = this.state.movies.filter((m) => m._id !== id);\n  //   this.setState({ ...this.state.pageSize, movies });\n  // };\n  handleChangePage = (page) => {\n    this.setState({ currentPage: page });\n  };\n  handleGenreSelected = (genre) => {\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\n  };\n  handleSearch = (query) => {\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\n  };\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n  getPagedData = () => {\n    const {\n      currentPage,\n      pageSize,\n      sortColumn,\n      selectedGenre,\n      searchQuery,\n      movies: allMovies,\n    } = this.state;\n\n    let filtered = allMovies;\n    if (searchQuery)\n      filtered = allMovies.filter((m) =>\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    else if (selectedGenre && selectedGenre._id)\n      filtered = allMovies.filter((m) => m.genre._id === selectedGenre._id);\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filtered.length, data: movies };\n  };\n  render() {\n    const { length: count } = this.state.movies;\n    const { currentPage, pageSize, sortColumn, searchQuery } = this.state;\n\n    if (count == 0) return <p>There are no movies in the database.</p>;\n\n    const { totalCount, data: movies } = this.getPagedData();\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup\n            items={this.state.genres}\n            selectedItem={this.state.selectedGenre}\n            onItemSelect={this.handleGenreSelected}\n          />\n        </div>\n        <div className=\"col\">\n          <Link\n            to=\"/movies/new\"\n            className=\"btn btn-primary\"\n            style={{ marginBottom: 20 }}>\n            New Movie\n          </Link>\n          <p>Showing {totalCount} movies in the database.</p>\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\n          <MoviesTable\n            movies={movies}\n            sortColumn={sortColumn}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handleChangePage}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}